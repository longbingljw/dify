"""update more text fields for mysql compatible

Revision ID: e0e5dc8aa037
Revises: 9adccf7ca328
Create Date: 2025-05-23 21:46:56.678995

"""
from alembic import op
import models
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'e0e5dc8aa037'
down_revision = '9adccf7ca328'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('api_requests', schema=None) as batch_op:
        batch_op.alter_column('request',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('response',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('app_annotation_hit_histories', schema=None) as batch_op:
        batch_op.alter_column('source',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('question',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('annotation_question',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('annotation_content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('app_model_configs', schema=None) as batch_op:
        batch_op.alter_column('opening_statement',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('suggested_questions',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('suggested_questions_after_answer',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('speech_to_text',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('text_to_speech',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('more_like_this',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('user_input_form',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('pre_prompt',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('agent_mode',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('sensitive_word_avoidance',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('retriever_resource',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('chat_prompt_config',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('completion_prompt_config',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('dataset_configs',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('external_data_tools',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('file_upload',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('apps', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('tracing',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('celery_taskmeta', schema=None) as batch_op:
        batch_op.alter_column('traceback',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('child_chunks', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.create_index('child_chunks_node_idx', ['index_node_id', 'dataset_id'], unique=False)
        batch_op.create_index('child_chunks_segment_idx', ['segment_id'], unique=False)

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.alter_column('override_model_configs',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('summary',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('introduction',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('system_instruction',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('dataset_process_rules', schema=None) as batch_op:
        batch_op.alter_column('rules',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('dataset_queries', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('dataset_retriever_resources', schema=None) as batch_op:
        batch_op.alter_column('dataset_name',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('document_name',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('data_source_type',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('index_node_hash',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('retriever_from',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('datasets', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('document_segments', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('answer',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.drop_index('document_segment_dataset_node_idx')
        batch_op.create_index('document_segment_node_dataset_idx', ['index_node_id', 'dataset_id'], unique=False)

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.alter_column('file_id',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('message_agent_thoughts', schema=None) as batch_op:
        batch_op.alter_column('thought',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('tool',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('tool_labels_str',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('tool_meta_str',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('tool_input',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('observation',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('tool_process_data',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('message',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('message_files',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('answer',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('message_annotations', schema=None) as batch_op:
        batch_op.alter_column('question',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.drop_constraint('message_annotations_conversation_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('message_annotations_conversation_id_fkey'), 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('message_chains', schema=None) as batch_op:
        batch_op.alter_column('input',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('output',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('message_feedbacks', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('message_files', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.alter_column('override_model_configs',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('query',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('answer',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('message_metadata',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.drop_constraint('messages_conversation_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('messages_conversation_id_fkey'), 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.alter_column('encrypt_public_key',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('tool_api_providers', schema=None) as batch_op:
        batch_op.alter_column('schema',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('tools_str',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('credentials_str',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('tool_builtin_providers', schema=None) as batch_op:
        batch_op.alter_column('encrypted_credentials',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('tool_conversation_variables', schema=None) as batch_op:
        batch_op.alter_column('variables_str',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('tool_model_invokes', schema=None) as batch_op:
        batch_op.alter_column('model_parameters',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('prompt_messages',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('model_response',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('tool_published_apps', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('llm_description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('query_description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.drop_constraint('tool_published_apps_app_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('tool_published_apps_app_id_fkey'), 'apps', ['app_id'], ['id'], ondelete='CASCADE')
        batch_op.drop_column('tenant_id')
        batch_op.drop_column('name')
        batch_op.drop_column('original_url')
        batch_op.drop_column('conversation_id')
        batch_op.drop_column('file_key')
        batch_op.drop_column('mimetype')
        batch_op.drop_column('size')

    with op.batch_alter_table('tool_workflow_providers', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)
        batch_op.alter_column('parameter_configuration',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('workflow_conversation_variables', schema=None) as batch_op:
        batch_op.drop_index('workflow__conversation_variables_app_id_idx')
        batch_op.drop_index('workflow__conversation_variables_created_at_idx')
        batch_op.create_index(batch_op.f('workflow_conversation_variables_app_id_idx'), ['app_id'], unique=False)
        batch_op.create_index(batch_op.f('workflow_conversation_variables_conversation_id_idx'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('workflow_conversation_variables_created_at_idx'), ['created_at'], unique=False)

    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.alter_column('inputs',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('outputs',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)
        batch_op.alter_column('execution_metadata',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.alter_column('error',
               existing_type=mysql.TEXT(collation='utf8mb4_general_ci'),
               type_=mysql.LONGTEXT(),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflow_runs', schema=None) as batch_op:
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('workflow_node_executions', schema=None) as batch_op:
        batch_op.alter_column('execution_metadata',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('outputs',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('inputs',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('workflow_conversation_variables', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('workflow_conversation_variables_created_at_idx'))
        batch_op.drop_index(batch_op.f('workflow_conversation_variables_conversation_id_idx'))
        batch_op.drop_index(batch_op.f('workflow_conversation_variables_app_id_idx'))
        batch_op.create_index('workflow__conversation_variables_created_at_idx', ['created_at'], unique=False)
        batch_op.create_index('workflow__conversation_variables_app_id_idx', ['app_id'], unique=False)

    with op.batch_alter_table('tool_workflow_providers', schema=None) as batch_op:
        batch_op.alter_column('parameter_configuration',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('tool_published_apps', schema=None) as batch_op:
        batch_op.add_column(sa.Column('size', mysql.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('mimetype', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False))
        batch_op.add_column(sa.Column('file_key', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False))
        batch_op.add_column(sa.Column('conversation_id', mysql.CHAR(collation='utf8mb4_general_ci', length=36), nullable=True))
        batch_op.add_column(sa.Column('original_url', mysql.VARCHAR(collation='utf8mb4_general_ci', length=2048), nullable=True))
        batch_op.add_column(sa.Column('name', mysql.VARCHAR(collation='utf8mb4_general_ci', length=255), nullable=False))
        batch_op.add_column(sa.Column('tenant_id', mysql.CHAR(collation='utf8mb4_general_ci', length=36), nullable=False))
        batch_op.drop_constraint(batch_op.f('tool_published_apps_app_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key('tool_published_apps_app_id_fkey', 'apps', ['app_id'], ['id'])
        batch_op.alter_column('query_description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('llm_description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('tool_model_invokes', schema=None) as batch_op:
        batch_op.alter_column('model_response',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('prompt_messages',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('model_parameters',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('tool_conversation_variables', schema=None) as batch_op:
        batch_op.alter_column('variables_str',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('tool_builtin_providers', schema=None) as batch_op:
        batch_op.alter_column('encrypted_credentials',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('tool_api_providers', schema=None) as batch_op:
        batch_op.alter_column('credentials_str',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('tools_str',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('schema',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('tenants', schema=None) as batch_op:
        batch_op.alter_column('encrypt_public_key',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('sites', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('messages_conversation_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key('messages_conversation_id_fkey', 'conversations', ['conversation_id'], ['id'])
        batch_op.alter_column('message_metadata',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('answer',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('query',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('override_model_configs',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('message_files', schema=None) as batch_op:
        batch_op.alter_column('url',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('message_feedbacks', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('message_chains', schema=None) as batch_op:
        batch_op.alter_column('output',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('input',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('message_annotations', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('message_annotations_conversation_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key('message_annotations_conversation_id_fkey', 'conversations', ['conversation_id'], ['id'])
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('question',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('message_agent_thoughts', schema=None) as batch_op:
        batch_op.alter_column('answer',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('message_files',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('message',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('tool_process_data',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('observation',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('tool_input',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('tool_meta_str',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('tool_labels_str',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('tool',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('thought',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('documents', schema=None) as batch_op:
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('file_id',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('document_segments', schema=None) as batch_op:
        batch_op.drop_index('document_segment_node_dataset_idx')
        batch_op.create_index('document_segment_dataset_node_idx', ['dataset_id', 'index_node_id'], unique=False)
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('answer',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('datasets', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('dataset_retriever_resources', schema=None) as batch_op:
        batch_op.alter_column('retriever_from',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('index_node_hash',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('data_source_type',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('document_name',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('dataset_name',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('dataset_queries', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('dataset_process_rules', schema=None) as batch_op:
        batch_op.alter_column('rules',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.alter_column('system_instruction',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('introduction',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('summary',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('override_model_configs',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('child_chunks', schema=None) as batch_op:
        batch_op.drop_index('child_chunks_segment_idx')
        batch_op.drop_index('child_chunks_node_idx')
        batch_op.alter_column('error',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('celery_taskmeta', schema=None) as batch_op:
        batch_op.alter_column('traceback',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('apps', schema=None) as batch_op:
        batch_op.alter_column('tracing',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('app_model_configs', schema=None) as batch_op:
        batch_op.alter_column('file_upload',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('external_data_tools',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('dataset_configs',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('completion_prompt_config',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('chat_prompt_config',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('retriever_resource',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('sensitive_word_avoidance',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('agent_mode',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('pre_prompt',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('user_input_form',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('more_like_this',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('text_to_speech',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('speech_to_text',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('suggested_questions_after_answer',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('suggested_questions',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('opening_statement',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    with op.batch_alter_table('app_annotation_hit_histories', schema=None) as batch_op:
        batch_op.alter_column('annotation_content',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('annotation_question',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('question',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)
        batch_op.alter_column('source',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=False)

    with op.batch_alter_table('api_requests', schema=None) as batch_op:
        batch_op.alter_column('response',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)
        batch_op.alter_column('request',
               existing_type=mysql.LONGTEXT(),
               type_=mysql.TEXT(collation='utf8mb4_general_ci'),
               existing_nullable=True)

    # ### end Alembic commands ###
